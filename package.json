{
  "name": "typescript-action",
  "description": "Github Action to setup caching with Buildless",
  "version": "1.0.0",
  "author": "Buildless (https://less.build)",
  "private": true,
  "homepage": "https://github.com/buildless/setup-buildless",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/buildless/setup-buildless.git"
  },
  "bugs": {
    "url": "https://github.com/buildless/setup-buildless/issues"
  },
  "keywords": [
    "actions",
    "node",
    "setup"
  ],
  "exports": {
    ".": "./dist/index.js"
  },
  "engines": {
    "node": ">=20"
  },
  "scripts": {
    "build": "pnpm run bundle",
    "bundle": "pnpm run format:write && pnpm run package",
    "ci-test": "jest",
    "clean": "shx rm -fr dist src/gen",
    "gen": "test -d src/gen || buf generate --include-imports",
    "coverage": "make-coverage-badge --output-path ./badges/coverage.svg",
    "format:write": "prettier --write **/*.ts",
    "format:check": "prettier --check **/*.ts",
    "lint": "npx eslint . -c ./.github/linters/.eslintrc.yml",
    "package": "pnpm run gen && concurrently 'pnpm run package:main' 'pnpm run package:cleanup'",
    "package:main": "ncc build src/index.ts --license licenses.txt",
    "package:cleanup": "ncc build src/cleanup.ts -o dist/cleanup",
    "package:watch": "pnpm run package -- --watch",
    "test": "jest",
    "all": "pnpm run format:write && pnpm run lint && pnpm run test && pnpm run coverage && pnpm run package"
  },
  "license": "MIT",
  "jestSonar": {},
  "jest": {
    "preset": "ts-jest",
    "verbose": true,
    "clearMocks": true,
    "testEnvironment": "node",
    "testResultsProcessor": "jest-sonar-reporter",
    "setupFiles": [
      "<rootDir>/.dev/test-env.js"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 0,
        "functions": 0,
        "lines": 0,
        "statements": 0
      }
    },
    "coveragePathIgnorePatterns": [
      "src/gen"
    ],
    "moduleFileExtensions": [
      "js",
      "ts"
    ],
    "testMatch": [
      "**/*.test.ts"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/dist/"
    ],
    "transform": {
      "^.+\\.ts$": "ts-jest"
    },
    "coverageReporters": [
      "json-summary",
      "text",
      "lcov"
    ],
    "collectCoverage": true,
    "collectCoverageFrom": [
      "./src/**"
    ]
  },
  "dependencies": {
    "@actions/cache": "^3.2.2",
    "@actions/core": "^1.10.1",
    "@actions/exec": "^1.1.1",
    "@actions/github": "^6.0.0",
    "@actions/http-client": "^2.2.0",
    "@actions/io": "^1.1.3",
    "@actions/tool-cache": "^2.0.1",
    "@bufbuild/buf": "^1.28.1",
    "@bufbuild/protobuf": "^1.5.0",
    "@bufbuild/protoc-gen-es": "^1.5.0",
    "@connectrpc/connect": "^1.1.3",
    "@connectrpc/protoc-gen-connect-es": "^1.1.3",
    "octokit": "^3.1.2"
  },
  "devDependencies": {
    "@connectrpc/connect-node": "^1.1.3",
    "@jest/globals": "^29.7.0",
    "@types/jest": "^29.5.10",
    "@types/node": "^20.10.0",
    "@typescript-eslint/eslint-plugin": "^6.12.0",
    "@typescript-eslint/parser": "^6.12.0",
    "@vercel/ncc": "^0.38.1",
    "concurrently": "^8.2.2",
    "eslint": "^8.54.0",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-github": "^4.10.1",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-jest": "^27.6.0",
    "eslint-plugin-jsonc": "^2.10.0",
    "eslint-plugin-prettier": "^5.0.1",
    "jest": "^29.7.0",
    "jest-sonar-reporter": "^2.0.0",
    "make-coverage-badge": "^1.2.0",
    "prettier": "^3.1.0",
    "prettier-eslint": "^16.1.2",
    "shx": "^0.3.4",
    "ts-jest": "^29.1.1",
    "typescript": "^5.3.2"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ],
    "rules": {
      "signed-off-by": [
        2,
        "always",
        "Signed-off-by:"
      ]
    }
  },
  "prettier": {
    "printWidth": 80,
    "tabWidth": 2,
    "useTabs": false,
    "semi": false,
    "singleQuote": true,
    "quoteProps": "as-needed",
    "jsxSingleQuote": false,
    "trailingComma": "none",
    "bracketSpacing": true,
    "bracketSameLine": true,
    "arrowParens": "avoid",
    "proseWrap": "always",
    "htmlWhitespaceSensitivity": "css",
    "endOfLine": "lf"
  }
}
